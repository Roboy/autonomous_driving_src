<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model"
       default="$(find tricycle_gazebo)/urdf_models/tricycle.urdf"/>

  <!-- include the file that loads urdf description of the robot -->
  <include file="$(find tricycle_gazebo)/launch/viz.launch">
    <arg name="model" value="$(arg model)"/>
  </include>

  <!--We resume the logic in empty_world.launch, changing only the name of the
  world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-x 0 -y 0 -z 0 -unpause -urdf -model tricycle -param
        robot_description"
        respawn="false" output="screen"/>

  <!-- Start a node that will allow us to control simulation via ROS topics -->
  <rosparam command="load"
            file="$(find tricycle_gazebo)/config/joints_state.yaml"
            ns="tricycle_joint_state_controller"/>
  <rosparam command="load"
            file="$(find tricycle_gazebo)/config/front_wheel_controller.yaml"
            ns="tricycle_front_wheel_controller"/>
  <rosparam command="load"
            file="$(find tricycle_gazebo)/config/rear_wheels_controller.yaml"
            ns="tricycle_rear_wheels_controller"/>

  <node name="trycicle_controller_spawner" pkg="controller_manager"
        type="spawner"
        args="tricycle_joint_state_controller
          tricycle_front_wheel_controller
          tricycle_rear_wheels_controller
          --shutdown-timeout 3"/>

  <!-- Start a node that will forward navigation stack commands to the
  simulation -->
  <node name="navigation_stack_bridge" pkg="tricycle_gazebo"
        type="controller.py"/>

</launch>